{
  "_args": [
    [
      {
        "raw": "sass-loader@3.1.2",
        "scope": null,
        "escapedName": "sass-loader",
        "name": "sass-loader",
        "rawSpec": "3.1.2",
        "spec": "3.1.2",
        "type": "version"
      },
      "/home/ubunto/Documents/Work/finance/react-redux-d3-webpack-es6-seed"
    ]
  ],
  "_from": "sass-loader@3.1.2",
  "_id": "sass-loader@3.1.2",
  "_inCache": true,
  "_location": "/sass-loader",
  "_nodeVersion": "5.0.0",
  "_npmUser": {
    "name": "peerigon",
    "email": "developers@peerigon.com"
  },
  "_npmVersion": "3.3.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sass-loader@3.1.2",
    "scope": null,
    "escapedName": "sass-loader",
    "name": "sass-loader",
    "rawSpec": "3.1.2",
    "spec": "3.1.2",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/sass-loader/-/sass-loader-3.1.2.tgz",
  "_shasum": "0ab5094a4c1e28948b4d56f2398f135797359f96",
  "_shrinkwrap": null,
  "_spec": "sass-loader@3.1.2",
  "_where": "/home/ubunto/Documents/Work/finance/react-redux-d3-webpack-es6-seed",
  "author": {
    "name": "J. Tangelder"
  },
  "bugs": {
    "url": "https://github.com/jtangelder/sass-loader/issues"
  },
  "dependencies": {
    "async": "^1.4.0",
    "loader-utils": "^0.2.5",
    "object-assign": "^4.0.1"
  },
  "description": "Sass loader for webpack",
  "devDependencies": {
    "bootstrap-sass": "^3.3.5",
    "css-loader": "^0.23.0",
    "enhanced-require": "^0.5.0-beta6",
    "file-loader": "^0.8.4",
    "jshint": "^2.8.0",
    "mocha": "^2.3.4",
    "node-sass": "3.4.2",
    "raw-loader": "^0.5.1",
    "should": "^7.0.2",
    "style-loader": "^0.13.0",
    "webpack": "1.12.6",
    "webpack-dev-server": "^1.7.0"
  },
  "directories": {},
  "dist": {
    "shasum": "0ab5094a4c1e28948b4d56f2398f135797359f96",
    "tarball": "https://registry.npmjs.org/sass-loader/-/sass-loader-3.1.2.tgz"
  },
  "gitHead": "38fe63ba089cdb216d9e9451cf7ed67cc99575b2",
  "homepage": "https://github.com/jtangelder/sass-loader#readme",
  "keywords": [
    "sass",
    "libsass",
    "webpack",
    "loader"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "akiran",
      "email": "kiran.coder0@gmail.com"
    },
    {
      "name": "peerigon",
      "email": "developers@peerigon.com"
    }
  ],
  "name": "sass-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "node-sass": "^3.4.2",
    "webpack": "^1.12.6"
  },
  "readme": "# Sass loader for [webpack](http://webpack.github.io/)\n\n## Install\n\n`npm install sass-loader node-sass webpack --save-dev`\n\nThe sass-loader requires [node-sass](https://github.com/sass/node-sass) and [webpack](https://github.com/webpack/webpack)\nas [`peerDependency`](https://docs.npmjs.com/files/package.json#peerdependencies). Thus you are able to specify the required versions accurately.\n\n---\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n``` javascript\nvar css = require(\"!raw!sass!./file.scss\");\n// => returns compiled css code from file.scss, resolves Sass imports\nvar css = require(\"!css!sass!./file.scss\");\n// => returns compiled css code from file.scss, resolves Sass and CSS imports and url(...)s\n```\n\nUse in tandem with the [`style-loader`](https://github.com/webpack/style-loader) and [`css-loader`](https://github.com/webpack/css-loader) to add the css rules to your document:\n\n``` javascript\nrequire(\"!style!css!sass!./file.scss\");\n```\n*NOTE: If you encounter module errors complaining about a missing `style` or `css` module, make sure you have installed all required loaders via npm.*\n\n### Apply via webpack config\n\nIt's recommended to adjust your `webpack.config` so `style!css!sass!` is applied automatically on all files ending on `.scss`:\n\n``` javascript\nmodule.exports = {\n  ...\n  module: {\n    loaders: [\n      {\n        test: /\\.scss$/,\n        loaders: [\"style\", \"css\", \"sass\"]\n      }\n    ]\n  }\n};\n```\n\nThen you only need to write: `require(\"./file.scss\")`.\n\n### Sass options\n\nYou can pass options to node-sass by defining a `sassLoader`-property on your `webpack.config.js`. See [node-sass](https://github.com/andrew/node-sass) for all available options.\n\n``` javascript\nmodule.exports = {\n  ...\n  module: {\n    loaders: [\n      {\n        test: /\\.scss$/,\n        loaders: [\"style\", \"css\", \"sass\"]\n      }\n    ]\n  }\n  sassLoader: {\n    includePaths: [path.resolve(__dirname, \"./some-folder\")]\n  }\n};\n```\n\nPassing your options as [query parameters](http://webpack.github.io/docs/using-loaders.html#query-parameters) is also supported, but can get confusing if you need to set a lot of options.\n\nIf you need to define two different loader configs, you can also change the config's property name via `sass?config=otherSassLoaderConfig`:\n\n```javascript\nmodule.exports = {\n  ...\n  module: {\n    loaders: [\n      {\n        test: /\\.scss$/,\n        loaders: [\"style\", \"css\", \"sass?config=otherSassLoaderConfig\"]\n      }\n    ]\n  }\n  otherSassLoaderConfig: {\n    ...\n  }\n};\n```\n\n### Imports\n\nwebpack provides an [advanced mechanism to resolve files](http://webpack.github.io/docs/resolving.html). The sass-loader uses node-sass' custom importer feature to pass all queries to the webpack resolving engine. Thus you can import your sass-modules from `node_modules`. Just prepend them with a `~` which tells webpack to look-up the [`modulesDirectories`](http://webpack.github.io/docs/configuration.html#resolve-modulesdirectories).\n\n```css\n@import \"~bootstrap/less/bootstrap\";\n```\n\nIt's important to only prepend it with `~`, because `~/` resolves to the home-directory. webpack needs to distinguish between `bootstrap` and `~bootstrap` because CSS- and Sass-files have no special syntax for importing relative files. Writing `@import \"file\"` is the same as `@import \"./file\";`\n\n### Problems with `url(...)`\n\nSince Sass/[libsass](https://github.com/sass/libsass) does not provide [url rewriting](https://github.com/sass/libsass/issues/532), all linked assets must be relative to the output.\n\n- If you're just generating CSS without passing it to the css-loader, it must be relative to your web root.\n- If you pass the generated CSS on to the css-loader, all urls must be relative to the entry-file (e.g. `main.scss`).\n\nMore likely you will be disrupted by this second issue. It is natural to expect relative references to be resolved against the `.scss`-file in which they are specified (like in regular `.css`-files). Thankfully there are a two solutions to this problem:\n\n- Add the missing url rewriting using the [resolve-url-loader](https://github.com/bholloway/resolve-url-loader). Place it directly after the sass-loader in the loader chain.\n- Library authors usually provide a variable to modify the asset path. [bootstrap-sass](https://github.com/twbs/bootstrap-sass) for example has an `$icon-font-path`. Check out [this working bootstrap example](https://github.com/jtangelder/sass-loader/tree/master/test/bootstrapSass).\n\n### Source maps\n\nTo enable CSS Source maps, you'll need to pass the `sourceMap`-option to the sass- *and* the css-loader. Your `webpack.config.js` should look like this:\n\n```javascript\nmodule.exports = {\n    ...\n    devtool: \"source-map\", // or \"inline-source-map\"\n    module: {\n        loaders: [\n            {\n                test: /\\.scss$/,\n                loaders: [\"style\", \"css?sourceMap\", \"sass?sourceMap\"]\n            }\n        ]\n    }\n};\n```\n\nIf you want to edit the original Sass files inside Chrome, [there's a good blog post](https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0). Checkout [test/sourceMap](https://github.com/jtangelder/sass-loader/tree/master/test) for a running example.\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jtangelder/sass-loader.git"
  },
  "scripts": {
    "create-spec": "node test/tools/runCreateSpec.js",
    "posttest": "jshint index.js test",
    "pretest": "node test/tools/runCreateSpec.js",
    "test": "mocha -R spec",
    "test-bootstrap-sass": "webpack-dev-server --config test/bootstrapSass/webpack.config.js --content-base ./test/bootstrapSass",
    "test-hmr": "webpack-dev-server --config test/hmr/webpack.config.js --content-base ./test/hmr --hot --inline",
    "test-source-map": "webpack-dev-server --config test/sourceMap/webpack.config.js --content-base ./test/sourceMap",
    "test-spec": "mocha -R spec test/spec.test.js",
    "test-watch": "webpack --config test/watch/webpack.config.js"
  },
  "version": "3.1.2"
}
