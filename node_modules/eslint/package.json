{
  "_args": [
    [
      {
        "raw": "eslint@2.8.0",
        "scope": null,
        "escapedName": "eslint",
        "name": "eslint",
        "rawSpec": "2.8.0",
        "spec": "2.8.0",
        "type": "version"
      },
      "/home/ubunto/Documents/Work/finance/react-redux-d3-webpack-es6-seed"
    ]
  ],
  "_from": "eslint@2.8.0",
  "_id": "eslint@2.8.0",
  "_inCache": true,
  "_location": "/eslint",
  "_nodeVersion": "4.4.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/eslint-2.8.0.tgz_1460741729191_0.6839966129045933"
  },
  "_npmUser": {
    "name": "nzakas",
    "email": "nicholas@nczconsulting.com"
  },
  "_npmVersion": "2.15.0",
  "_phantomChildren": {
    "brace-expansion": "1.1.7",
    "fs.realpath": "1.0.0",
    "inflight": "1.0.6",
    "inherits": "2.0.3",
    "once": "1.4.0",
    "path-is-absolute": "1.0.1"
  },
  "_requested": {
    "raw": "eslint@2.8.0",
    "scope": null,
    "escapedName": "eslint",
    "name": "eslint",
    "rawSpec": "2.8.0",
    "spec": "2.8.0",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/eslint/-/eslint-2.8.0.tgz",
  "_shasum": "03acd769b513d84b9a1451e0c934897fe7eefbc3",
  "_shrinkwrap": null,
  "_spec": "eslint@2.8.0",
  "_where": "/home/ubunto/Documents/Work/finance/react-redux-d3-webpack-es6-seed",
  "author": {
    "name": "Nicholas C. Zakas",
    "email": "nicholas+npm@nczconsulting.com"
  },
  "bin": {
    "eslint": "./bin/eslint.js"
  },
  "bugs": {
    "url": "https://github.com/eslint/eslint/issues/"
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "concat-stream": "^1.4.6",
    "debug": "^2.1.1",
    "doctrine": "^1.2.1",
    "es6-map": "^0.1.3",
    "escope": "^3.6.0",
    "espree": "3.1.3",
    "estraverse": "^4.2.0",
    "esutils": "^2.0.2",
    "file-entry-cache": "^1.1.1",
    "glob": "^7.0.3",
    "globals": "^9.2.0",
    "ignore": "^3.0.10",
    "imurmurhash": "^0.1.4",
    "inquirer": "^0.12.0",
    "is-my-json-valid": "^2.10.0",
    "is-resolvable": "^1.0.0",
    "js-yaml": "^3.5.1",
    "json-stable-stringify": "^1.0.0",
    "lodash": "^4.0.0",
    "mkdirp": "^0.5.0",
    "optionator": "^0.8.1",
    "path-is-absolute": "^1.0.0",
    "path-is-inside": "^1.0.1",
    "pluralize": "^1.2.1",
    "progress": "^1.1.8",
    "require-uncached": "^1.0.2",
    "shelljs": "^0.6.0",
    "strip-json-comments": "~1.0.1",
    "table": "^3.7.8",
    "text-table": "~0.2.0",
    "user-home": "^2.0.0"
  },
  "description": "An AST-based pattern checker for JavaScript.",
  "devDependencies": {
    "beefy": "^2.0.0",
    "brfs": "0.0.9",
    "browserify": "^12.0.1",
    "chai": "^3.5.0",
    "cheerio": "^0.19.0",
    "coveralls": "2.11.4",
    "dateformat": "^1.0.8",
    "ejs": "^2.3.3",
    "eslint-release": "^0.5.0",
    "esprima": "^2.4.1",
    "esprima-fb": "^15001.1001.0-dev-harmony-fb",
    "gh-got": "^2.2.0",
    "istanbul": "^0.4.0",
    "jsdoc": "^3.3.0-beta1",
    "leche": "^2.1.1",
    "linefix": "^0.1.1",
    "load-perf": "^0.2.0",
    "markdownlint": "^0.1.0",
    "mocha": "^2.4.5",
    "mocha-phantomjs": "4.0.1",
    "npm-license": "^0.3.1",
    "phantomjs-polyfill": "0.0.1",
    "proxyquire": "^1.0.0",
    "semver": "^5.0.3",
    "shelljs-nodecli": "~0.1.0",
    "sinon": "^1.17.2",
    "temp": "^0.8.3",
    "through": "^2.3.6"
  },
  "directories": {},
  "dist": {
    "shasum": "03acd769b513d84b9a1451e0c934897fe7eefbc3",
    "tarball": "https://registry.npmjs.org/eslint/-/eslint-2.8.0.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "files": [
    "LICENSE",
    "README.md",
    "bin",
    "conf",
    "lib",
    "messages"
  ],
  "gitHead": "44d96ac45b1eda0bce5925be7318d77b5c6e9935",
  "homepage": "http://eslint.org",
  "keywords": [
    "ast",
    "lint",
    "javascript",
    "ecmascript",
    "espree"
  ],
  "license": "MIT",
  "main": "./lib/api.js",
  "maintainers": [
    {
      "name": "nzakas",
      "email": "nicholas@nczconsulting.com"
    },
    {
      "name": "ivolodin",
      "email": "ivolodin@gmail.com"
    }
  ],
  "name": "eslint",
  "optionalDependencies": {},
  "readme": "[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Build status][appveyor-image]][appveyor-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Downloads][downloads-image]][downloads-url]\n[![Bountysource](https://www.bountysource.com/badge/tracker?tracker_id=282608)](https://www.bountysource.com/trackers/282608-eslint?utm_source=282608&utm_medium=shield&utm_campaign=TRACKER_BADGE)\n[![Join the chat at https://gitter.im/eslint/eslint](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eslint/eslint?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# ESLint\n\n[Website](http://eslint.org) | [Configuring](http://eslint.org/docs/user-guide/configuring) | [Rules](http://eslint.org/docs/rules/) | [Contributing](http://eslint.org/docs/developer-guide/contributing) | [Reporting Bugs](http://eslint.org/docs/developer-guide/contributing/reporting-bugs) | [Twitter](https://twitter.com/geteslint) | [Mailing List](https://groups.google.com/group/eslint) | [Chat Room](https://gitter.im/eslint/eslint)\n\nESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:\n\n* ESLint uses [Espree](https://github.com/eslint/espree) for JavaScript parsing.\n* ESLint uses an AST to evaluate patterns in code.\n* ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.\n\n## Installation\n\nYou can install ESLint using npm:\n\n    npm install -g eslint\n\n## Usage\n\nIf it's your first time using ESLint, you should set up a config file using `--init`:\n\n    eslint --init\n\nAfter that, you can run ESLint on any JavaScript file:\n\n    eslint test.js test2.js\n\n## Configuration\n\nAfter running `eslint --init`, you'll have a `.eslintrc` file in your directory. In it, you'll see some rules configured like this:\n\n```json\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quotes\": [\"error\", \"double\"]\n    }\n}\n```\n\nThe names `\"semi\"` and `\"quotes\"` are the names of [rules](http://eslint.org/docs/rules) in ESLint. The number is the error level of the rule and can be one of the three values:\n\n* `\"off\"` or `0` - turn the rule off\n* `\"warn\"` or `1` - turn the rule on as a warning (doesn't affect exit code)\n* `\"error\"` or `2` - turn the rule on as an error (exit code will be 1)\n\nThe three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](http://eslint.org/docs/user-guide/configuring)).\n\n## Sponsors\n\n* Development is sponsored by [Box](https://box.com)\n* Site search ([eslint.org](http://eslint.org)) is sponsored by [Algolia](https://www.algolia.com)\n\n## Team\n\nThese folks keep the project moving and are resources for help:\n\n* Nicholas C. Zakas ([@nzakas](https://github.com/nzakas)) - project lead\n* Ilya Volodin ([@ilyavolodin](https://github.com/ilyavolodin)) - reviewer\n* Brandon Mills ([@btmills](https://github.com/btmills)) - reviewer\n* Gyandeep Singh ([@gyandeeps](https://github.com/gyandeeps)) - reviewer\n* Toru Nagashima ([@mysticatea](https://github.com/mysticatea)) - reviewer\n* Mathias Schreck ([@lo1tuma](https://github.com/lo1tuma)) - committer\n* Jamund Ferguson ([@xjamundx](https://github.com/xjamundx)) - committer\n* Ian VanSchooten ([@ianvs](https://github.com/ianvs)) - committer\n* Burak Yiğit Kaya ([@byk](https://github.com/byk)) - committer\n* Alberto Rodríguez ([@alberto](https://github.com/alberto)) - committer\n* Kai Cataldo ([@kaicataldo](https://github.com/kaicataldo)) - committer\n* Michael Ficarra ([@michaelficarra](https://github.com/michaelficarra)) - committer\n* Mark Pedrotti ([@pedrottimark](https://github.com/pedrottimark)) - committer\n* Oleg Gaidarenko ([@markelog](https://github.com/markelog)) - committer\n* Mike Sherov [@mikesherov](https://github.com/mikesherov)) - committer\n* Henry Zhu ([@hzoo](https://github.com/hzoo)) - committer\n* Marat Dulin ([@mdevils](https://github.com/mdevils)) - committer\n* Alexej Yaroshevich ([@zxqfox](https://github.com/zxqfox)) - committer\n\n## Releases\n\nWe have scheduled releases every two weeks on Friday or Saturday.\n\n## Filing Issues\n\nBefore filing an issue, please be sure to read the guidelines for what you're reporting:\n\n* [Bug Report](http://eslint.org/docs/developer-guide/contributing/reporting-bugs)\n* [Propose a New Rule](http://eslint.org/docs/developer-guide/contributing/new-rules)\n* [Proposing a Rule Change](http://eslint.org/docs/developer-guide/contributing/rule-changes)\n* [Request a Change](http://eslint.org/docs/developer-guide/contributing/changes)\n\n## Frequently Asked Questions\n\n### Why don't you like JSHint???\n\nI do like JSHint. And I like Anton and Rick. Neither of those were deciding factors in creating this tool. The fact is that I've had a dire need for a JavaScript tool with pluggable linting rules. I had hoped JSHint would be able to do this, however after chatting with Anton, I found that the planned plugin infrastructure wasn't going to suit my purpose.\n\n### I'm not giving up JSHint for this!\n\nThat's not really a question, but I got it. I'm not trying to convince you that ESLint is better than JSHint. The only thing I know is that ESLint is better than JSHint for what I'm doing. In the off chance you're doing something similar, it might be better for you. Otherwise, keep using JSHint, I'm certainly not going to tell you to stop using it.\n\n### How does ESLint performance compare to JSHint and JSCS?\n\nESLint is slower than JSHint, usually 2-3x slower on a single file. This is because ESLint uses Espree to construct an AST before it can evaluate your code whereas JSHint evaluates your code as it's being parsed. The speed is also based on the number of rules you enable; the more rules you enable, the slower the process.\n\nDespite being slower, we believe that ESLint is fast enough to replace JSHint without causing significant pain.\n\nESLint is faster than JSCS, as ESLint uses a single-pass traversal for analysis whereas JSCS using a querying model.\n\nIf you are using both JSHint and JSCS on your files, then using just ESLint will be faster.\n\n### Is ESLint just linting or does it also check style?\n\nESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use it for both.\n\n### Does ESLint support JSX?\n\nYes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](http://eslint.org/docs/user-guide/configuring).). Please note that supporting JSX syntax *is not* the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) if you are using React and want React semantics.\n\n### What about ECMAScript 6 support?\n\nESLint has full support for ECMAScript 6. By default, this support is off. You can enable ECMAScript 6 support through [configuration](http://eslint.org/docs/user-guide/configuring).\n\n### What about experimental features?\n\nESLint doesn't natively support experimental ECMAScript language features. You can use [babel-eslint](https://github.com/babel/babel-eslint) to use any option available in Babel.\n\nOnce a language feature has been adopted into the ECMAScript standard, we will accept\nissues and pull requests related to the new feature, subject to our [contributing\nguidelines](http://eslint.org/docs/developer-guide/contributing). Until then, please use\nthe appropriate parser and plugin(s) for your experimental feature.\n\n### Where to ask for help?\n\nJoin our [Mailing List](https://groups.google.com/group/eslint) or [Chatroom](https://gitter.im/eslint/eslint)\n\n\n[npm-image]: https://img.shields.io/npm/v/eslint.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/eslint\n[travis-image]: https://img.shields.io/travis/eslint/eslint/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eslint/eslint\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/iwxmiobcvbw3b0av/branch/master?svg=true\n[appveyor-url]: https://ci.appveyor.com/project/nzakas/eslint/branch/master\n[coveralls-image]: https://img.shields.io/coveralls/eslint/eslint/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/eslint/eslint?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/eslint.svg?style=flat-square\n[downloads-url]: https://www.npmjs.com/package/eslint\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eslint/eslint.git"
  },
  "scripts": {
    "alpharelease": "node Makefile.js prerelease -- alpha",
    "betarelease": "node Makefile.js prerelease -- beta",
    "browserify": "node Makefile.js browserify",
    "check-commit": "node Makefile.js checkGitCommit",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "docs": "node Makefile.js docs",
    "gensite": "node Makefile.js gensite",
    "lint": "node Makefile.js lint",
    "perf": "node Makefile.js perf",
    "profile": "beefy tests/bench/bench.js --open -- -t brfs -t ./tests/bench/xform-rules.js -r espree",
    "release": "node Makefile.js release",
    "test": "node Makefile.js test"
  },
  "version": "2.8.0"
}
